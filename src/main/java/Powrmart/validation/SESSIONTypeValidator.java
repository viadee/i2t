/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package Powrmart.validation;

import Powrmart.ATTRIBUTEType;
import Powrmart.CONFIGREFERENCEType;
import Powrmart.ISVALIDType;
import Powrmart.METADATAEXTENSIONType;
import Powrmart.PARENTTYPEType;
import Powrmart.RESOURCEREFERENCEType;
import Powrmart.REUSABLEType4;
import Powrmart.SESSIONCOMPONENTType;
import Powrmart.SESSIONEXTENSIONType;
import Powrmart.SESSTRANSFORMATIONINSTType;
import Powrmart.TASKType;
import Powrmart.TRANSFORMRESOURCEREFType;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link Powrmart.SESSIONType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SESSIONTypeValidator {
    boolean validate();

    boolean validateTASK(EList<TASKType> value);
    boolean validateSESSTRANSFORMATIONINST(EList<SESSTRANSFORMATIONINSTType> value);
    boolean validateCONFIGREFERENCE(CONFIGREFERENCEType value);
    boolean validateSESSIONCOMPONENT(EList<SESSIONCOMPONENTType> value);
    boolean validateSESSIONEXTENSION(EList<SESSIONEXTENSIONType> value);
    boolean validateATTRIBUTE(EList<ATTRIBUTEType> value);
    boolean validateMETADATAEXTENSION(EList<METADATAEXTENSIONType> value);
    boolean validateGroup(FeatureMap value);
    boolean validateRESOURCEREFERENCE(EList<RESOURCEREFERENCEType> value);
    boolean validateTRANSFORMRESOURCEREF(EList<TRANSFORMRESOURCEREFType> value);
    boolean validateDESCRIPTION(Object value);
    boolean validateISVALID(ISVALIDType value);
    boolean validateMAPPINGNAME(Object value);
    boolean validateMAPPINGVERSION(Object value);
    boolean validateNAME(Object value);
    boolean validatePARENT(Object value);
    boolean validatePARENTTYPE(PARENTTYPEType value);
    boolean validateREUSABLE(REUSABLEType4 value);
    boolean validateSORTORDER(Object value);
    boolean validateVERSIONNUMBER(Object value);
}

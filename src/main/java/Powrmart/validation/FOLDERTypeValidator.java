/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package Powrmart.validation;

import Powrmart.CONFIGType;
import Powrmart.EXPRMACROType;
import Powrmart.FOLDERVERSIONType;
import Powrmart.MAPPINGType;
import Powrmart.MAPPLETType;
import Powrmart.SCHEDULERType;
import Powrmart.SESSIONType;
import Powrmart.SHAREDType;
import Powrmart.SHORTCUTType;
import Powrmart.SOURCEType;
import Powrmart.TARGETType;
import Powrmart.TASKType;
import Powrmart.TRANSFORMATIONType;
import Powrmart.WORKFLOWType;
import Powrmart.WORKLETType;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link Powrmart.FOLDERType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface FOLDERTypeValidator {
    boolean validate();

    boolean validateGroup(FeatureMap value);
    boolean validateFOLDERVERSION(EList<FOLDERVERSIONType> value);
    boolean validateCONFIG(EList<CONFIGType> value);
    boolean validateSCHEDULER(EList<SCHEDULERType> value);
    boolean validateTASK(EList<TASKType> value);
    boolean validateSESSION(EList<SESSIONType> value);
    boolean validateWORKLET(EList<WORKLETType> value);
    boolean validateWORKFLOW(EList<WORKFLOWType> value);
    boolean validateSOURCE(EList<SOURCEType> value);
    boolean validateTARGET(EList<TARGETType> value);
    boolean validateTRANSFORMATION(EList<TRANSFORMATIONType> value);
    boolean validateMAPPLET(EList<MAPPLETType> value);
    boolean validateMAPPING(EList<MAPPINGType> value);
    boolean validateSHORTCUT(EList<SHORTCUTType> value);
    boolean validateEXPRMACRO(EList<EXPRMACROType> value);
    boolean validateDESCRIPTION(Object value);
    boolean validateGROUP1(Object value);
    boolean validateNAME(Object value);
    boolean validateOWNER(Object value);
    boolean validatePERMISSIONS(Object value);
    boolean validateSHARED(SHAREDType value);
    boolean validateUUID(Object value);
}
